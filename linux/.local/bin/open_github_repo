#!/bin/bash

# Expects to find GutHub authentication in ~/.netrc

github_api_accept_header="Accept: application/vnd.github.v3+json"
rest_request=https://api.github.com/user/repos?per_page=100\&affiliation=owner,collaborator,organization_member\&sort=push

cache_file="$HOME/.cache/github_repos_dmenu"

function get_repos_one_page {
    curl -s --netrc "${rest_request}&page=$1" -H "${github_api_accept_header}"  | jq ".[] | {name: .full_name, url: .html_url}"
}

function get_repos_all_pages {
    # Use pagination if necessary
    last_page=`curl -s -I --netrc ${rest_request} -H "${github_api_accept_header}" | grep -oP '(?<=page=)(\d+)(?=>; rel="last")'`
    if [ -z "$last_page" ]; then
        get_repos_one_page 1
    else
        source `which env_parallel.bash`
        seq $last_page | env_parallel -k get_repos_one_page {}
    fi
}

function generate_cache {
    cache=$(get_repos_all_pages)
    echo $cache > $cache_file
}

function maybe_regenerate_cache {
    if test `find $cache_file -mmin +2`
    then
        generate_cache
    fi
}

[ ! -e $cache_file ] && generate_cache

selected=$(cat $cache_file | jq .name | tr -d \" | dmenu)
if [ -n "$selected" ]; then
  cat $cache_file | jq ". | select(.name == \"$selected\") | .url" | tr -d \" | xargs xdg-open
  i3-msg --quiet [urgent=latest] focus
fi

maybe_regenerate_cache &
