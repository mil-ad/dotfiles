[
    // Font size
    {
        "key": "ctrl+=",
        "command": "editor.action.fontZoomIn",
        "when": "!isMac && editorFocus"
    },
    {
        "key": "ctrl+-",
        "command": "editor.action.fontZoomOut",
        "when": "!isMac && editorFocus"
    },
    {
        "key": "ctrl+0",
        "command": "editor.action.fontZoomReset",
        "when": "!isMac && editorFocus"
    },
    {
        "key": "ctrl+shift+=",
        "command": "workbench.action.zoomIn",
        "when": "!isMac"
    },
    {
        "key": "ctrl+shift+-",
        "command": "workbench.action.zoomOut",
        "when": "!isMac"
    },
    {
        "key": "ctrl+shift+0",
        "command": "workbench.action.zoomReset",
        "when": "!isMac"
    },
    {
        "key": "cmd+=",
        "command": "editor.action.fontZoomIn",
        "when": "isMac"
    },
    {
        "key": "cmd+-",
        "command": "editor.action.fontZoomOut",
        "when": "isMac && editorFocus"
    },
    {
        "key": "cmd+0",
        "command": "editor.action.fontZoomReset",
        "when": "isMac && editorFocus"
    },
    {
        "key": "cmd+=",
        "command": "terminalFontSize.increase",
        "when": "isMac && terminalFocus && terminalHasBeenCreated",
    },
    {
        "key": "cmd+-",
        "command": "terminalFontSize.decrease",
        "when": "isMac && terminalFocus && terminalHasBeenCreated",
    },
    {
        "key": "ctrl+=",
        "command": "terminalFontSize.increase",
        "when": "!isMac && terminalFocus && terminalHasBeenCreated",
    },
    {
        "key": "ctrl+-",
        "command": "terminalFontSize.decrease",
        "when": "!isMac && terminalFocus && terminalHasBeenCreated",
    },
    // Multiple cursors
    {
        "key": "alt+meta+g",
        "command": "editor.action.selectHighlights",
        "when": "!isMac && editorFocus"
    },
    {
        "key": "alt+meta+i",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "!isMac && editorFocus"
    },
    {
        "key": "alt+meta+e",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "!isMac && editorTextFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "!isMac && editorFocus"
    },
    {
        "key": "alt+cmd+g",
        "command": "editor.action.selectHighlights",
        "when": "isMac && editorFocus"
    },
    {
        "key": "alt+cmd+i",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "isMac && editorFocus"
    },
    {
        "key": "alt+cmd+e",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "isMac && editorTextFocus"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "isMac && editorFocus"
    },
    // Symbols
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.gotoSymbol",
        "when": "isMac"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.gotoSymbol",
        "when": "!isMac"
    },
    {
        "key": "cmd+shift+r",
        "command": "workbench.action.showAllSymbols",
        "when": "isMac"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.showAllSymbols",
        "when": "!isMac"
    },
    {
        "key": "cmd+d",
        "command": "editor.action.deleteLines",
        "when": "isMac && textInputFocus && !editorReadonly",
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.deleteLines",
        "when": "!isMac && textInputFocus && !editorReadonly",
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+j",
        "command": "editor.action.joinLines",
        "when": "isMac && editorTextFocus && !editorReadonly",
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.joinLines",
        "when": "!isMac & editorTextFocus && !editorReadonly",
    },
    {
        "key": "alt+q",
        "command": "-rewrap.rewrapComment",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+q",
        "command": "rewrap.rewrapComment",
        "when": "editorTextFocus"
    },
    // {
    //     "key": "cmd+v",
    //     "command": "pasteAndIndent.action",
    //     "when": "editorTextFocus && !editorReadonly"
    // },
    // {
    //     "key": "ctrl+v",
    //     "command": "pasteAndIndent.action",
    //     "when": "editorTextFocus && !editorReadonly"
    // },
    {
        "key": "ctrl+]",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.navigateForward"
    },
    // {
    //     "key": "ctrl+]",
    //     "command": "-editor.action.indentLines",
    //     "when": "editorTextFocus && !editorReadonly"
    // },
    {
        "key": "cmd+[",
        "command": "workbench.action.navigateBack",
        "when": "isMac"
    },
    {
        "key": "ctrl+[",
        "command": "workbench.action.navigateBack",
        "when": "!isMac"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "alt+meta+s",
        "command": "git.stageSelectedRanges"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+l b",
        "command": "latex-workshop.build",
        "when": "config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
    },
    {
        "key": "ctrl+l alt+b",
        "command": "-latex-workshop.build",
        "when": "config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-latex-workshop.build",
        "when": "!config.latex-workshop.bind.altKeymap.enabled && editorLangId =~ /latex|rsweave|jlweave/"
    },
    {
        "key": "alt+meta+o",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "alt+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+insert",
        "command": "-workbench.action.terminal.pasteSelection",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.extension.togglePreview",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "cmd+`",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active && !isMac"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f5",
        "command": "-debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f5",
        "command": "workbench.action.files.revert"
    },
    {
        "key": "cmd+space",
        "command": "editor.action.triggerSuggest",
        "when": "isMac && editorTextFocus"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+numpad0",
        "command": "-workbench.action.zoomReset"
    },
    {
        "key": "ctrl+numpad_add",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "cmd+c",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0003"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0004"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0017"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u000c"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0012"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0014"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "cmd+z",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u001a"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u001b[1;5D"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u001b[1;5C"
        },
        "when": "isMac && terminalFocus"
    },
    {
        "key": "alt+f3",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f3",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "cmd+g cmd+d",
        "command": "git.openChange",
        "when": "isMac"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "cmd+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activeViewlet == 'workbench.view.explorer'"
    },
    {
        "key": "ctrl+k ctrl+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+k ctrl+g",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activeViewlet == 'workbench.view.scm'"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activeViewlet == 'workbench.view.extensions'"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activeViewlet == 'workbench.view.debug'"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activeViewlet == 'workbench.view.search'"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+shift+`",
        "command": "workbench.action.tasks.runTask",
        "args": "open kitty",
        "when": "!taskRunning"
    },
    {
        "key": "ctrl+shift+`",
        "command": "workbench.action.tasks.terminate",
        "args": "open kitty",
        "when": "taskRunning"
    },
    {
        "key": "alt+meta+k",
        "command": "aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "ctrl+i",
        "command": "composerMode.agent"
    },
    {
        "key": "ctrl+v",
        "command": "extension.paste-indent",
        "when": "editorTextFocus"
    },
    // Limit Cursor's Ctrl-l to editorTextFocus because otherwise it interferes with the terminal
    {
        "key": "ctrl+l",
        "command": "-aichat.newchataction"
    },
]
